[user]
	name = Txema LeoÃÅn
	email = soy@txemaleon.com
	username = txemaleon

[core]
	excludesfile = ~/.config/dotfiles/gitignore
	pager = less -r

[push]
	default = current

[color]
	ui = auto

[color "branch"]
	current = yellow reverse
	local = yellow
	remote = green

[color "diff"]
	meta = yellow bold
	frag = magenta bold
	old = red bold
	new = green bold

[color "status"]
	added = yellow
	changed = green
	untracked = cyan

[url "git@github.com:"]
	insteadOf = "gh:"
	pushInsteadOf = "github:"
	pushInsteadOf = "git://github.com/"

[url "git://github.com/"]
	insteadOf = "github:"

[url "git@gist.github.com:"]
	insteadOf = "gst:"
	pushInsteadOf = "gist:"
	pushInsteadOf = "git://gist.github.com/"

[url "git://gist.github.com/"]
	insteadOf = "gist:"

[alias]
	who = shortlog -sn
	d = diff
	a = add
	sh = show
	s = switch
	ci = commit
	fix = commit --amend --no-edit
	co = checkout
	l = log --date=local
	lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
	c = diff --cached
	cp = cherry-pick
	b = branch
	rb = rebase -i @{u}
	f = fetch
	prb = pull --rebase
	ignore = update-index --assume-unchanged
	unignore = update-index --no-assume-unchanged
	list-ignored = !git ls-files -v | grep "^[[:lower:]]"
	tracking = "!f() { git for-each-ref --format '%(refname:short):%(upstream:short)' 'refs/heads' | egrep -v ':$'; }; f"
	is-clean-workdir = "!f() { git diff --stat --exit-code || { echo \"Workdir dirty\"; exit 1; }; }; f"
	is-clean-index = "!f() { git diff --stat --cached --exit-code || { echo \"Index dirty\"; exit 2; }; }; f"
	is-clean = "!f() { git is-clean-workdir && git is-clean-index; }; f"
	co-merge = "!f() { local=\"$1\"; remote=\"$2\"; git checkout \"$local\"; git merge --ff-only \"$remote\"; }; f"
	current-branch = rev-parse --abbrev-ref HEAD
	sync = "!f() { git is-clean || { echo Aborting sync.; exit 1; }; current=$(git current-branch); git fetch --all; git tracking | while IFS=: read local remote; do echo \"Merging $local with $remote\"; git co-merge \"$local\" \"$remote\"; done 3>&1 1>&2 2>&3 | egrep -i --color 'fatal|$' 3>&1 1>&2 2>&3; git checkout \"$current\"; }; f"

[filter "media"]
	clean = git media clean %f
	smudge = git media smudge %f
	required = true

[filter "hawser"]
	clean = git hawser clean %f
	smudge = git hawser smudge %f
	required = true

[filter "lfs"]
	clean = git lfs clean %f
	smudge = git lfs smudge %f
	required = true

[mergetool]
	keepBackup = false

[difftool "sourcetree"]
	cmd = opendiff \"$LOCAL\" \"$REMOTE\"
	path =

[mergetool "sourcetree"]
	cmd = /Applications/Sourcetree.app/Contents/Resources/opendiff-w.sh \"$LOCAL\" \"$REMOTE\" -ancestor \"$BASE\" -merge \"$MERGED\"
	trustExitCode = true

[commit]
	rebase = true

[init]
	defaultBranch = main

[merge]
	ff = false

[pull]
	ff = only
